---
# tasks file for sorensj.nfs

# Include variables and define needed variables.
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

# Setup/install tasks.
- name: Setup for RedHat/Debian OS family
  ansible.builtin.include_tasks: setup-{{ ansible_os_family }}.yml

- name: Ensure NFS utilities are installed.
  ansible.builtin.package:
    name:
      - "{{ nfs_package }}"
      - "{{ nfs_kernel_server }}"
    state: present

- name: Ensure NFS directories are created
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode | default('0755') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  with_items: "{{ nfs_share_mounts }}"
  when: nfs_share_mounts | length > 0

# Do not create mountpoint using file, the mount module will create it
# automatically. This avoids problems where the module tries to change
# permissions on an existing directory

- name: Mount NFS share
  become: true
  ansible.posix.mount:
    fstype: nfs
    name: "{{ item.path }}"
    opts: "vers={{ nfs_version }},{{ item.opts | default(nfs_mount_opts) }}"
    src: "{{ item.location }}"
    dump: "{{ item.dump | default(omit) }}"
    passno: "{{ item.passno | default(omit) }}"
    state: "{{ item.state | default('mounted') }}"
  with_items: "{{ nfs_share_mounts }}"
  when: nfs_share_mounts | length > 0
